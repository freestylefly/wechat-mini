# Nginx配置 - 使用子域名处理API请求

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name api.your-domain.com;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# 子域名HTTPS配置
server {
    listen 443 ssl;
    server_name api.your-domain.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/cert/your-domain.com.pem;
    ssl_certificate_key /etc/nginx/cert/your-domain.com.key;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # 启用OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;
    
    # API请求转发到Spring Boot应用
    location / {
        # 反向代理到Spring Boot应用
        proxy_pass http://127.0.0.1:8080;
        
        # 设置必要的代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # 允许长连接
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # CORS设置 - 允许微信小程序
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-WX-Source, X-WX-DEBUG' always;
        add_header Access-Control-Max-Age 3600 always;
        add_header Access-Control-Allow-Credentials 'true' always;
        
        # 特殊处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-WX-Source, X-WX-DEBUG' always;
            add_header Access-Control-Max-Age 3600 always;
            add_header Access-Control-Allow-Credentials 'true' always;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # 特殊处理空Referer的情况（非调试模式下的微信小程序）
        if ($http_referer = '') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-WX-Source, X-WX-DEBUG' always;
            add_header Access-Control-Max-Age 3600 always;
            add_header Access-Control-Allow-Credentials 'true' always;
        }
        
        # 设置安全头
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy no-referrer-when-downgrade;
        
        # 允许空Referer或来自微信的Referer
        set $cors "true";
        if ($http_referer = '') {
            set $cors "true";
        }
    }
} 