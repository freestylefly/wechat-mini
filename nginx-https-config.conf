# Nginx配置 - 正确处理HTTPS请求到Java后端

# ==== 全局设置 ====
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # SSL设置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # ==== 服务器配置 ====
    
    # HTTP重定向到HTTPS
    server {
        listen 80;
        server_name canghecode.com;
        
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # 主站点HTTPS配置
    server {
        listen 443 ssl;
        server_name canghecode.com;
        
        # SSL证书配置
        ssl_certificate /etc/nginx/cert/canghecode.com.pem;
        ssl_certificate_key /etc/nginx/cert/canghecode.com.key;
        
        # 根目录设置
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ =404;
        }
    }
    
    # 6803端口的API服务 - 独立配置
    server {
        listen 6803 ssl;
        server_name canghecode.com;
        
        # SSL证书配置
        ssl_certificate /etc/nginx/cert/canghecode.com.pem;
        ssl_certificate_key /etc/nginx/cert/canghecode.com.key;
        
        # 启用OCSP Stapling (建议)
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;
        
        # 重要: 所有API请求转发到内部Spring Boot
        location / {
            # 反向代理到Java应用 (注意: 使用内部HTTP端口)
            proxy_pass http://127.0.0.1:8080;
            
            # 设置必要的代理头
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # 允许长连接
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # CORS设置 - 允许微信小程序
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header Access-Control-Max-Age 3600 always;
            
            # 特殊处理OPTIONS请求
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header Access-Control-Max-Age 3600 always;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # 设置一些安全头
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Referrer-Policy no-referrer-when-downgrade;
        }
    }
} 